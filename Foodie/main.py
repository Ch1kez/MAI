import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor
import markup

bot = Bot('5886258157:AAHp1JqgOLM2Opam5vJHztVHd1GrlgDgGFE')
dp = Dispatcher(bot)

@dp.message_handler(commands="start")
async def from_start_to_menu(message: types.Message):
    await message.answer('–î–æ–±—Ä—ã–π –¥–µ–Ω—å! –†—è–¥–æ–º —Å –∫–∞–∫–æ–π —Å—Ç–∞–Ω—Ü–∏–µ–π'
                         ' –º–µ—Ç—Ä–æ –í—ã –±—ã —Ö–æ—Ç–µ–ª–∏ –ø–æ–∫—É—à–∞—Ç—å?',
                         reply_markup = markup.metro_buttons)

@dp.message_handler()
async def menu_handler(message: types.Message):
    metro_is_pressed = False
    kitchen_is_pressed = False
    expansion_is_pressed = False
    up_down = False

    if message.text == '–ê—Ä–±–∞—Ç—Å–∫–∞—è':
        metro_is_pressed = True
    elif message.text == '–¢–µ–∞—Ç—Ä–∞–ª—å–Ω–∞—è':
        metro_is_pressed = True
    elif message.text == '–¢–≤–µ—Ä—Å–∫–∞—è':
        metro_is_pressed = True

    if message.text == '–ï–≤—Ä–æ–ø–µ–π—Å–∫–∞—è':
        kitchen_is_pressed = True
    elif message.text == '–Ø–ø–æ–Ω—Å–∫–∞—è':
        kitchen_is_pressed = True
    elif message.text == '–ì—Ä—É–∑–∏–Ω—Å–∫–∞—è':
        kitchen_is_pressed = True

    if message.text == '–º–µ–Ω–µ–µ 1500':
        expansion_is_pressed = True
    elif message.text == '1500 - 2000':
        expansion_is_pressed = True
    elif message.text == '2000 - 3000':
        expansion_is_pressed = True

    if message.text == 'üëçüèª':
        await message.answer('–°–ø–∞—Å–∏–±–æ –∑–∞ –í–∞—à –æ—Ç–≤–µ—Ç! –ù–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–π—Ç–µ'
                             ' –±–æ—Ç–∞ –∏ –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏, –∫–∞–∫ —Ç–æ–ª—å–∫–æ'
                             ' –æ–Ω —Å—Ç–∞–Ω–µ—Ç –µ—â–µ —Ö–æ—Ç—å —á—É—Ç–æ—á–∫—É —É–º–Ω–µ–µ!')
        up_down = True

    elif message.text == 'üëéüèª':
        await message.answer('–°–ø–∞—Å–∏–±–æ –∑–∞ –í–∞—à –æ—Ç–≤–µ—Ç! –ú—ã —Å–¥–µ–ª–∞–µ–º –≤—Å–µ,'
                             ' —á—Ç–æ–±—ã –≤ –±—É–¥—É—â–µ–º –Ω–∞—à –ø—Ä–æ–¥—É–∫—Ç –ø–æ–∫–æ—Ä–∏–ª –∏'
                             ' –≤–∞—à–µ —Å–µ—Ä–¥—Ü–µ.')
        up_down = True


    if metro_is_pressed == True:
        await message.answer('–û—Ç–ª–∏—á–Ω–æ! –ö–∞–∫–∞—è –∫—É—Ö–Ω—è –í–∞–º —Å–µ–≥–æ–¥–Ω—è –ø–æ –¥—É—à–µ?',
                             reply_markup = markup.kitchen_buttons)

    if kitchen_is_pressed == True:
        await message.answer('–ó–∞–≤–µ–¥–µ–Ω–∏—è —Å –∫–∞–∫–∏–º —Å—Ä–µ–¥–Ω–∏–º —á–µ–∫–æ–º –í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç?',
                             reply_markup = markup.price_buttons)

    if expansion_is_pressed == True:
        await message.answer('***–≤—ã–¥–∞–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ –∑–∞–≤–µ–¥–µ–Ω–∏—è –ø–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º***')
        await message.answer('–•–æ—Ç–µ–ª–∏ –±—ã –í—ã, —á—Ç–æ–±—ã –Ω–∞—à —Ä–æ–±–æ—Ç —Ä–∞—Å—à–∏—Ä–∏–ª –≥–µ–æ–≥—Ä–∞—Ñ–∏—é —Å–≤–æ–µ–π'
                             ' —Ä–∞–±–æ—Ç—ã –∏ —É–≤–µ–ª–∏—á–∏–ª –∫—Ä–∏—Ç–µ—Ä–∏–∏ –ø–æ–¥–±–æ—Ä–∞?',
                             reply_markup = markup.expansion_buttons)

    if up_down == True:
        await message.answer('–•–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å? –ï—Å–ª–∏ –¥–∞, —Ç–æ –Ω–∞ –∫–∞–∫–æ–π —Å—Ç–∞–Ω—Ü–∏–µ–π'
                             ' –º–µ—Ç—Ä–æ –í—ã –±—ã —Ö–æ—Ç–µ–ª–∏ –ø–æ–∫—É—à–∞—Ç—å?',
                             reply_markup=markup.metro_buttons)

if __name__ == '__main__':
    executor.start_polling(dp)